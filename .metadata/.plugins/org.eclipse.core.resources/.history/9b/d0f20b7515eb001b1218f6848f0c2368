package com.serratec.trabalhoAplicado.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.serratec.trabalhoAplicado.exception.ResourceNotFoundException;
import com.serratec.trabalhoAplicado.model.Procedimentos;
import com.serratec.trabalhoAplicado.repository.ProcedimentosRepository;

@Service
public class ProcedimentosService {
	

	@Autowired
	private ProcedimentosRepository repositorioProcedimentos;
	

	public List<Procedimentos> obterTodos() {
		return repositorioProcedimentos.findAll();
	}
	
	
	public Optional<Procedimentos> obterPorId(Long id) {
		 Optional<Procedimentos> procedimentos = repositorioProcedimentos.findById(id);	 
		
		 if(procedimentos.isEmpty()) {
			throw new ResourceNotFoundException("procedimentos n達o encontrado por id!");
		}
		 return procedimentos;
	}
	
	

	public List<Procedimentos> obterPorNome(String nomeProcedimento) {
		List<Procedimentos> procedimentos = repositorioProcedimentos.findAllByNomeContainingIgnoreCase(nomeProcedimento);	
		
		if(procedimentos.isEmpty()) {
			throw new ResourceNotFoundException("Procedimentos n達o encontrado!");
		}
		return procedimentos;
	}
	
	public Procedimentos adicionar(Procedimentos procedimentos) {
		procedimentos.setId(null);
		
		return repositorioProcedimentos.save(procedimentos);
		
	}
	
	 public Procedimentos atualizar(Procedimentos procedimentos, Long id) {
		 Optional<Procedimentos> procedimentosAtualizado = repositorioProcedimentos.findById(id);
		 
			if(procedimentosAtualizado.isEmpty()) {
				throw new ResourceNotFoundException("Procedimentos n達o encontrado");
			}
		procedimentos.setId(id);		
		return repositorioProcedimentos.save(procedimentos);
		
	}


	public void deletar(Long id) {
	    Optional<Procedimentos> deletarProcedimentos = repositorioProcedimentos.findById(id);
   
	    if(deletarProcedimentos.isEmpty()) {
			throw new ResourceNotFoundException("Procedimentos n達o encontrado");
		}
		repositorioProcedimentos.deleteById(id);	 
 }
	
}